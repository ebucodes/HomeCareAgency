{"ast":null,"code":"import axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      elementsPerPage: 10,\n      currentPage: 1,\n      perPage: 10,\n      pageOptions: [10, 25, 50, 100],\n      active: true,\n      loading: false,\n      item: {},\n      statuses: [],\n      status: '',\n      incidents: [],\n      log: ''\n    };\n  },\n  computed: {\n    columns() {\n      return ['Name', 'Status', 'Date Created'];\n    },\n    isFormValid() {\n      return this.type && this.priority && this.desc;\n    }\n  },\n  methods: {\n    setItem(item) {\n      this.item = item;\n      this.id = item.id;\n      // console.log(this.item)\n    },\n    // \n    async fetchIncidents() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/health-care-worker/my-incidents', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN')\n          }\n        });\n        if (response.data.status) {\n          this.incidents = response.data.data;\n        } else {\n          console.error('Error fetching incidents:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching incidents:', error);\n      }\n    },\n    // \n    async fetchPriorities() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/priorities/list', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN')\n          }\n        });\n        if (response.data.status) {\n          this.priorities = response.data.data;\n        } else {\n          console.error('Error fetching priorities:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching priorities:', error);\n      }\n    },\n    // log\n    async reportLog() {\n      // Set loading state to true when submitting the form\n      this.loading = true;\n      const newData = {\n        id: this.id,\n        log: this.log\n      };\n      axios.post('http://127.0.0.1:8000/api/health-care-worker/incident/log', newData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN')\n        }\n      }).then(response => {\n        console.log('success');\n        console.log(response);\n        Swal.fire({\n          icon: 'success',\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 5000,\n          title: response.data.message\n        });\n        this.clearForm();\n        // Redirect to login page after successful registration\n        // const router = useRouter();\n        window.location.href = 'http://localhost:8080/health-care-worker/dashboard';\n        // router.push('/'); // Assuming '/' is the path for the login page\n      }).catch(error => {\n        console.log('success');\n        console.log(error);\n        Swal.fire({\n          icon: 'error',\n          title: error.response ? error.response.data.message : 'Failed',\n          // text: error.response.data.data\n          text: error.response ? error.response.data.data : 'An error occurred'\n        });\n      }).finally(() => {\n        // Reset loading state regardless of success or failure\n        this.loading = false;\n      });\n    },\n    // log\n\n    // \n    clearForm() {\n      this.log = '',\n      // Reset loading state when the form is cleared\n      this.loading = false;\n    },\n    num_pages() {\n      return Math.ceil(this.incidents.length / this.elementsPerPage);\n    },\n    change_page(page) {\n      this.currentPage = page;\n    }\n  },\n  mounted() {\n    this.fetchPriorities();\n    this.fetchIncidents();\n  }\n};","map":{"version":3,"names":["axios","Swal","data","elementsPerPage","currentPage","perPage","pageOptions","active","loading","item","statuses","status","incidents","log","computed","columns","isFormValid","type","priority","desc","methods","setItem","id","fetchIncidents","response","get","headers","localStorage","getItem","console","error","message","fetchPriorities","priorities","reportLog","newData","post","then","fire","icon","toast","position","showConfirmButton","timer","title","clearForm","window","location","href","catch","text","finally","num_pages","Math","ceil","length","change_page","page","mounted"],"sources":["C:\\Users\\chukwuebuka.ohaji\\Workspace\\Tests\\HomeCareAgency\\web\\src\\pages\\dashboard\\worker.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Breadcrumbs main=\"Health Care Worker\" title=\"default\" />\r\n\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row widget-grid\">\r\n                <div class=\"row\">\r\n                    <!--  -->\r\n                    <div class=\"col-xxl-6 col-md-6 box-col-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        <a class=\"btn btn-primary btn-hover-effect f-w-500\"\r\n                                            href=\"/admin/roles\">Roles</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <div class=\"dataTables_length\" id=\"basic-1_length\">\r\n                    <label>\r\n                        Show\r\n                        <select name=\"basic-1_length\" aria-controls=\"basic-1\" class=\"\" v-model=\"perPage\">\r\n                            <option v-for=\"option in pageOptions\" :key=\"option\" :value=\"option\">{{ option }}</option>\r\n                        </select> entries\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered display\" id=\"basic-1\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Incident Date</th>\r\n                                <th>Type of Incident</th>\r\n                                <th>Priority / Severity</th>\r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"incident in incidents\" :key=\"incident.id\">\r\n                                <td class=\"text-uppercase\">{{ incident.date }}</td>\r\n                                <td>{{ incident.type }}</td>\r\n                                <td>{{ incident.priority }}</td>\r\n                                <td class=\"text-uppercase\">{{ incident.status }}</td>\r\n                                <td>\r\n                                    <!-- Log  -->\r\n                                    <a class=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\"\r\n                                        @click=\"setItem(incident)\">\r\n                                        <vue-feather type=\"edit\"></vue-feather>Log </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <!-- Edit Modal -->\r\n                    <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Log Incident</h5>\r\n                                    <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\"\r\n                                        aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <form class=\"needs-validation\" novalidate=\"\" @submit.prevent=\"reportLog\">\r\n                                    <div class=\"modal-body\">\r\n                                        <input v-model=\"item.id\" type=\"hidden\">\r\n                                        <!-- Log -->\r\n                                        <div class=\"form-group mb-1\">\r\n                                            <label class=\"col-form-label\">Log Incident <span\r\n                                                    class=\"text-danger\">*</span>\r\n                                            </label>\r\n                                            <textarea v-model=\"log\" class=\"form-control\" required></textarea>\r\n                                        </div>\r\n\r\n                                        <!-- Status -->\r\n                                        <div class=\"form-group mb-1\">\r\n                                            <label class=\"col-form-label\">Status <span class=\"text-danger\">*</span>\r\n                                            </label>\r\n                                            <select v-model=\"status\" class=\"form-control\" id=\"statusSelect\" required>\r\n                                                <option v-for=\"status in statuses\" :value=\"status.name\">\r\n                                                    {{ status.name }}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-secondary\" type=\"button\"\r\n                                            data-bs-dismiss=\"modal\">Close</button>\r\n                                        <button :disabled=\"!isFormValid || loading\" class=\"btn btn-primary\">\r\n                                            <span v-if=\"loading\">Please Wait...</span>\r\n                                            <span v-else>Submit</span>\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\">\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"page-item\" v-for=\"i in num_pages()\" :key=\"i\"\r\n                        v-bind:class=\"[i == currentPage ? 'active' : '']\" v-on:click=\"change_page(i)\">\r\n                        <a class=\"page-link\">{{ i }}</a>\r\n                    </li>\r\n                    <li class=\"page-item\">\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            elementsPerPage: 10,\r\n            currentPage: 1,\r\n            perPage: 10,\r\n            pageOptions: [10, 25, 50, 100],\r\n            active: true,\r\n            loading: false,\r\n            item: {},\r\n            statuses: [],\r\n            status: '',\r\n            incidents: [],\r\n            log: '',\r\n\r\n        };\r\n    },\r\n    computed: {\r\n        columns() {\r\n            return ['Name', 'Status', 'Date Created'];\r\n        },\r\n        isFormValid() {\r\n            return (\r\n                this.type &&\r\n                this.priority &&\r\n                this.desc\r\n            );\r\n        }\r\n    },\r\n    methods: {\r\n        setItem(item) {\r\n            this.item = item\r\n            this.id = item.id\r\n            // console.log(this.item)\r\n        },\r\n\r\n        // \r\n        async fetchIncidents() {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:8000/api/health-care-worker/my-incidents', {\r\n                    headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN') }\r\n                });\r\n                if (response.data.status) {\r\n                    this.incidents = response.data.data;\r\n                } else {\r\n                    console.error('Error fetching incidents:', response.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching incidents:', error);\r\n            }\r\n        },\r\n\r\n        // \r\n        async fetchPriorities() {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:8000/api/priorities/list', {\r\n                    headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN') }\r\n                });\r\n                if (response.data.status) {\r\n                    this.priorities = response.data.data;\r\n                } else {\r\n                    console.error('Error fetching priorities:', response.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching priorities:', error);\r\n            }\r\n        },\r\n\r\n        // log\r\n        async reportLog() {\r\n            // Set loading state to true when submitting the form\r\n            this.loading = true;\r\n            const newData = {\r\n                id: this.id,\r\n                log: this.log,\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:8000/api/health-care-worker/incident/log', newData, {\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('HCA_TOKEN') }\r\n            })\r\n                .then(response => {\r\n                    console.log('success')\r\n                    console.log(response)\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        toast: true,\r\n                        position: 'top-end',\r\n                        showConfirmButton: false,\r\n                        timer: 5000,\r\n                        title: response.data.message,\r\n                    });\r\n                    this.clearForm();\r\n                    // Redirect to login page after successful registration\r\n                    // const router = useRouter();\r\n                    window.location.href = 'http://localhost:8080/health-care-worker/dashboard'\r\n                    // router.push('/'); // Assuming '/' is the path for the login page\r\n\r\n                })\r\n                .catch(error => {\r\n\r\n                    console.log('success')\r\n                    console.log(error)\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: error.response ? error.response.data.message : 'Failed',\r\n                        // text: error.response.data.data\r\n                        text: error.response ? error.response.data.data : 'An error occurred'\r\n                    });\r\n                })\r\n                .finally(() => {\r\n                    // Reset loading state regardless of success or failure\r\n                    this.loading = false;\r\n                });\r\n        },// log\r\n\r\n\r\n        // \r\n        clearForm() {\r\n            this.log = '',\r\n                // Reset loading state when the form is cleared\r\n                this.loading = false;\r\n        },\r\n        num_pages() {\r\n            return Math.ceil(this.incidents.length / this.elementsPerPage);\r\n        },\r\n        change_page(page) {\r\n            this.currentPage = page;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchPriorities();\r\n        this.fetchIncidents();\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}