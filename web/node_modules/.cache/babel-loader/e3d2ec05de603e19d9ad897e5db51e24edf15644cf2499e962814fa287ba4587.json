{"ast":null,"code":"import Swal from 'sweetalert2'; // Import SweetAlert\nimport axios from 'axios'; // Import Axios for making HTTP requests\n\nexport default {\n  data() {\n    return {\n      active: true,\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: '',\n      username: '',\n      // Define username property\n      password: '',\n      healthcareWorkers: [],\n      // Array to store fetched healthcare workers\n      selectedHealthcareWorker: null\n    };\n  },\n  created() {\n    this.fetchHealthcareWorkers();\n  },\n  methods: {\n    show() {\n      this.active = !this.active;\n    },\n    async fetchHealthcareWorkers() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/fetch-workers');\n        if (response.data.status) {\n          this.healthcareWorkers = response.data.data; // Assign fetched data to healthcareWorkers\n        } else {\n          console.error('Error fetching healthcare workers:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching healthcare workers:', error);\n      }\n    },\n    createUser() {\n      const userData = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        phoneNumber: this.phoneNumber,\n        username: this.username,\n        // Assign username to the userData object\n        healthcareWorkerId: this.selectedHealthcareWorker,\n        password: this.password // Assign password to the userData object\n      };\n      axios.post('http://127.0.0.1:8000/api/auth/register/client', userData).then(response => {\n        Swal.fire({\n          icon: 'success',\n          text: response.data.message\n        });\n        this.clearForm(); // Call clearForm method after successful user creation\n      }).catch(error => {\n        Swal.fire({\n          icon: 'error',\n          title: error.response.data.message,\n          text: error.response.data.message\n        });\n      });\n    },\n    clearForm() {\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phoneNumber = '';\n      this.username = ''; // Clear username field\n      this.password = ''; // Clear password field\n      this.selectedHealthcareWorker = null;\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","data","active","firstName","lastName","email","phoneNumber","username","password","healthcareWorkers","selectedHealthcareWorker","created","fetchHealthcareWorkers","methods","show","response","get","status","console","error","message","createUser","userData","healthcareWorkerId","post","then","fire","icon","text","clearForm","catch","title"],"sources":["C:\\Users\\chukwuebuka.ohaji\\Workspace\\Tests\\HomeCareAgency\\web\\src\\pages\\auth\\register_client.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container-fluid p-0\">\r\n            <div class=\"row m-0\">\r\n                <div class=\"col-xl-5 b-center bg-size \"\r\n                    :style=\"{ backgroundImage: 'url(' + require('../../assets/images/login/3.jpg') + ')' }\"\r\n                    style=\"background-size: cover; background-position: center center; display: block;\">\r\n                    <img class=\"bg-img-cover bg-center\" src=\"../../assets/images/login/3.jpg\" alt=\"looginpage\"\r\n                        style=\"display: none;\" />\r\n                </div>\r\n                <div class=\"col-xl-7 p-0\">\r\n                    <div class=\"login-card\">\r\n                        <div>\r\n                            <div>\r\n                                <a class=\"logo\">\r\n                                    <img class=\"img-fluid for-light\" src=\"../../assets/images/logo/logo.png\"\r\n                                        alt=\"looginpage\" />\r\n                                    <img class=\"img-fluid for-dark\" src=\"../../assets/images/logo/logo_dark.png\"\r\n                                        alt=\"looginpage\" />\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"login-main\">\r\n                                <form class=\"theme-form needs-validation\" novalidate @submit.prevent=\"createUser\">\r\n                                    <h4>Create your account</h4>\r\n                                    <p>Enter your personal details to register as a Client</p>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">First Name <span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input v-model=\"firstName\" class=\"form-control\" type=\"text\" required=\"\"\r\n                                            placeholder=\"First name\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Last Name<span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input v-model=\"lastName\" class=\"form-control\" type=\"text\" required=\"\"\r\n                                            placeholder=\"Last name\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Email Address (Optional)</label>\r\n                                        <input v-model=\"email\" class=\"form-control\" type=\"email\"\r\n                                            placeholder=\"Test@gmail.com\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Phone Number (Optional)</label>\r\n                                        <input v-model=\"phoneNumber\" class=\"form-control\" type=\"text\"\r\n                                            placeholder=\"1234567890\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Username <span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input v-model=\"username\" class=\"form-control\" type=\"text\"\r\n                                            placeholder=\"Username\" required />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Health Care Worker</label>\r\n                                        <select v-model=\"selectedHealthcareWorker\" class=\"form-control\"\r\n                                            id=\"workerSelect\">\r\n                                            <option value=\"\">--Select--</option>\r\n                                            <option v-for=\"worker in healthcareWorkers\" :value=\"worker.id\">\r\n                                                {{ worker.firstName + ' ' + worker.lastName }}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-2\">\r\n                                        <label class=\"col-form-label\">Password</label>\r\n                                        <div class=\"form-input position-relative\">\r\n\r\n                                            <input v-model=\"password\" class=\"form-control\"\r\n                                                :type=\"active ? 'password' : 'text'\" name=\"login[password]\" required=\"\"\r\n                                                placeholder=\"*********\" />\r\n                                            <div class=\"show-hide\"><span :class=\"active ? 'show' : 'hide'\"\r\n                                                    @click.prevent=\"show\">\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-6\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Register as a Client\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        <a class=\"btn-link ms-2\" href=\"/register/worker\">Register as a Health Care\r\n                                            Worker</a>\r\n                                    </p>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        Already have an account?\r\n                                        <router-link class=\"ms-2\" tag=\"a\" to=\"/\">\r\n                                            Login\r\n                                        </router-link>\r\n                                    </p>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            active: true,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            username: '', // Define username property\r\n            password: '',\r\n            healthcareWorkers: [], // Array to store fetched healthcare workers\r\n            selectedHealthcareWorker: null,\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchHealthcareWorkers();\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.active = !this.active;\r\n        },\r\n        async fetchHealthcareWorkers() {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:8000/api/fetch-workers');\r\n                if (response.data.status) {\r\n                    this.healthcareWorkers = response.data.data; // Assign fetched data to healthcareWorkers\r\n                } else {\r\n                    console.error('Error fetching healthcare workers:', response.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching healthcare workers:', error);\r\n            }\r\n        },\r\n        createUser() {\r\n            const userData = {\r\n                firstName: this.firstName,\r\n                lastName: this.lastName,\r\n                email: this.email,\r\n                phoneNumber: this.phoneNumber,\r\n                username: this.username, // Assign username to the userData object\r\n                healthcareWorkerId: this.selectedHealthcareWorker,\r\n                password: this.password // Assign password to the userData object\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:8000/api/auth/register/client', userData)\r\n                .then(response => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        text: response.data.message\r\n                    });\r\n                    this.clearForm(); // Call clearForm method after successful user creation\r\n                })\r\n                .catch(error => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: error.response.data.message,\r\n                        text: error.response.data.message\r\n                    });\r\n                });\r\n        },\r\n        clearForm() {\r\n            this.firstName = '';\r\n            this.lastName = '';\r\n            this.email = '';\r\n            this.phoneNumber = '';\r\n            this.username = ''; // Clear username field\r\n            this.password = ''; // Clear password field\r\n            this.selectedHealthcareWorker = null;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n<!-- <template>\r\n    <div>\r\n        <div class=\"container-fluid p-0\">\r\n            <div class=\"row m-0\">\r\n                <div class=\"col-xl-5 b-center bg-size \"\r\n                    :style=\"{ backgroundImage: 'url(' + require('../../assets/images/login/3.jpg') + ')' }\"\r\n                    style=\"background-size: cover; background-position: center center; display: block;\">\r\n                    <img class=\"bg-img-cover bg-center\" src=\"../../assets/images/login/3.jpg\" alt=\"looginpage\"\r\n                        style=\"display: none;\" />\r\n                </div>\r\n                <div class=\"col-xl-7 p-0\">\r\n                    <div class=\"login-card\">\r\n                        <div>\r\n                            <div>\r\n                                <a class=\"logo\">\r\n                                    <img class=\"img-fluid for-light\" src=\"../../assets/images/logo/logo.png\"\r\n                                        alt=\"looginpage\" />\r\n                                    <img class=\"img-fluid for-dark\" src=\"../../assets/images/logo/logo_dark.png\"\r\n                                        alt=\"looginpage\" />\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"login-main\">\r\n                                <form class=\"theme-form needs-validation\" novalidate=\"\">\r\n                                    <h4>Create your account</h4>\r\n                                    <p>Enter your personal details to register as a Client</p>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">First Name <span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"First name\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Last Name<span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Last name\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Email Address (Optional)</label>\r\n                                        <input class=\"form-control\" type=\"email\" placeholder=\"Test@gmail.com\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Phone Number (Optional)</label>\r\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"1234567890\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Username <span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"Username\" required />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Health Care Worker</label>\r\n                                        <select v-model=\"selectedWorker\" class=\"form-control\" id=\"workerSelect\">\r\n                                            <option value=\"\">--Select--</option>\r\n                                            <option v-for=\"worker in workers\" :value=\"worker.id\">{{\r\n                                                worker.id }}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-2\">\r\n                                        <label class=\"col-form-label\">Password</label>\r\n                                        <div class=\"form-input position-relative\">\r\n\r\n                                            <input class=\"form-control\" :type=\"active ? 'password' : 'text'\"\r\n                                                name=\"login[password]\" required=\"\" placeholder=\"*********\" />\r\n                                            <div class=\"show-hide\"><span :class=\"active ? 'show' : 'hide'\"\r\n                                                    @click.prevent=\"show\">\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-6\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Register as a Client\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        <a class=\"btn-link ms-2\" href=\"/register/worker\">Register as a Health Care\r\n                                            Worker</a>\r\n                                    </p>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        Already have an account?\r\n                                        <router-link class=\"ms-2\" tag=\"a\" to=\"/\">\r\n                                            Login\r\n                                        </router-link>\r\n                                    </p>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template> -->\r\n\r\n<!-- \r\n<script>\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            active: true,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            healthcareWorkers: [], // Array to store fetched healthcare workers\r\n            selectedHealthcareWorker: null, // Variable to store selected healthcare worker\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchHealthcareWorkers(); // Fetch healthcare workers when the component is created\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.active = !this.active;\r\n        },\r\n        async fetchHealthcareWorkers() {\r\n            let response = await axios.get('http://127.0.0.1:8000/api/fetch-workers')\r\n                .then(result => {\r\n                    // Store fetched healthcare workers in the array\r\n                    return result.data\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching healthcare workers:', error);\r\n                });\r\n\r\n            if (response?.status) {\r\n                this.healthcareWorkers = response;\r\n            }\r\n        },\r\n        createUser() {\r\n            // Prepare data for creating a new user\r\n            const userData = {\r\n                firstName: this.firstName,\r\n                lastName: this.lastName,\r\n                email: this.email,\r\n                phoneNumber: this.phoneNumber,\r\n                healthcareWorkerId: this.selectedHealthcareWorker // Assign selected healthcare worker ID\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:8000/api/auth/reigster/client', userData)\r\n                .then(response => {\r\n                    // Show success message using SweetAlert\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        // title: response.,\r\n                        text: response.data.message\r\n                    });\r\n\r\n                    // Clear form fields after successful user creation\r\n                    this.firstName = '';\r\n                    this.lastName = '';\r\n                    this.email = '';\r\n                    this.phoneNumber = '';\r\n                    this.selectedHealthcareWorker = null;\r\n                })\r\n                .catch(error => {\r\n                    // Show error message if user creation failed\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'User Creation Failed',\r\n                        text: error.response.data.message\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n</script> -->\r\n<!-- <script>\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            active: true,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            healthcareWorkers: [], // Corrected property name\r\n            selectedHealthcareWorker: null,\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchHealthcareWorkers();\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.active = !this.active;\r\n        },\r\n        async fetchHealthcareWorkers() {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:8000/api/fetch-workers');\r\n                if (response.data.status) {\r\n                    this.healthcareWorkers = response.data.data; // Assign fetched data to healthcareWorkers\r\n                } else {\r\n                    console.error('Error fetching healthcare workers:', response.data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching healthcare workers:', error);\r\n            }\r\n        },\r\n        createUser() {\r\n            const userData = {\r\n                firstName: this.firstName,\r\n                lastName: this.lastName,\r\n                email: this.email,\r\n                phoneNumber: this.phoneNumber,\r\n                healthcareWorkerId: this.selectedHealthcareWorker\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:8000/api/auth/register/client', userData)\r\n                .then(response => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        text: response.data.message\r\n                    });\r\n                    this.clearForm(); // Call clearForm method after successful user creation\r\n                })\r\n                .catch(error => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'User Creation Failed',\r\n                        text: error.response.data.message\r\n                    });\r\n                });\r\n        },\r\n        clearForm() {\r\n            this.firstName = '';\r\n            this.lastName = '';\r\n            this.email = '';\r\n            this.phoneNumber = '';\r\n            this.selectedHealthcareWorker = null;\r\n        }\r\n    }\r\n}\r\n</script> -->\r\n"],"mappings":"AA0GA,OAAOA,IAAG,MAAO,aAAa,EAAE;AAChC,OAAOC,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,iBAAiB,EAAE,EAAE;MAAE;MACvBC,wBAAwB,EAAE;IAC9B;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,sBAAsB,CAAC,CAAC;EACjC,CAAC;EACDC,OAAO,EAAE;IACLC,IAAIA,CAAA,EAAG;MACH,IAAI,CAACZ,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;IAC9B,CAAC;IACD,MAAMU,sBAAsBA,CAAA,EAAG;MAC3B,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,yCAAyC,CAAC;QAC3E,IAAID,QAAQ,CAACd,IAAI,CAACgB,MAAM,EAAE;UACtB,IAAI,CAACR,iBAAgB,GAAIM,QAAQ,CAACd,IAAI,CAACA,IAAI,EAAE;QACjD,OAAO;UACHiB,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEJ,QAAQ,CAACd,IAAI,CAACmB,OAAO,CAAC;QAC9E;MACJ,EAAE,OAAOD,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D;IACJ,CAAC;IACDE,UAAUA,CAAA,EAAG;MACT,MAAMC,QAAO,GAAI;QACbnB,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAE;QACzBgB,kBAAkB,EAAE,IAAI,CAACb,wBAAwB;QACjDF,QAAQ,EAAE,IAAI,CAACA,QAAO,CAAE;MAC5B,CAAC;MAEDR,KAAK,CAACwB,IAAI,CAAC,gDAAgD,EAAEF,QAAQ,EAChEG,IAAI,CAACV,QAAO,IAAK;QACdhB,IAAI,CAAC2B,IAAI,CAAC;UACNC,IAAI,EAAE,SAAS;UACfC,IAAI,EAAEb,QAAQ,CAACd,IAAI,CAACmB;QACxB,CAAC,CAAC;QACF,IAAI,CAACS,SAAS,CAAC,CAAC,EAAE;MACtB,CAAC,EACAC,KAAK,CAACX,KAAI,IAAK;QACZpB,IAAI,CAAC2B,IAAI,CAAC;UACNC,IAAI,EAAE,OAAO;UACbI,KAAK,EAAEZ,KAAK,CAACJ,QAAQ,CAACd,IAAI,CAACmB,OAAO;UAClCQ,IAAI,EAAET,KAAK,CAACJ,QAAQ,CAACd,IAAI,CAACmB;QAC9B,CAAC,CAAC;MACN,CAAC,CAAC;IACV,CAAC;IACDS,SAASA,CAAA,EAAG;MACR,IAAI,CAAC1B,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,QAAO,GAAI,EAAE,EAAE;MACpB,IAAI,CAACC,QAAO,GAAI,EAAE,EAAE;MACpB,IAAI,CAACE,wBAAuB,GAAI,IAAI;IACxC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}