{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport Body from '../components/body';\nimport Default from '../pages/dashboard/defaultPage.vue';\n/* Auth */\nimport Login from '../pages/auth/login';\nimport RegisterWorker from '../pages/auth/register_worker';\nimport RegisterClient from '../pages/auth/register_client';\nimport AdminDashboard from '../pages/dashboard/admin';\nimport ClientDashboard from '../pages/dashboard/client';\nimport WorkerDashboard from '../pages/dashboard/worker';\nimport AdminConfiguration from '@/pages/admin/configuration';\nimport MyActivity from \"@/pages/myActivity.vue\";\nimport AdminRoles from \"@/pages/admin/roles\";\nimport AdminPriority from \"@/pages/admin/priority\";\nimport AdminStatus from \"@/pages/admin/status\";\nimport AdminTypes from \"@/pages/admin/types\";\nimport AllActivities from \"@/pages/admin/activities\";\nimport AdminUsers from \"@/pages/admin/users\";\nimport ClientIncident from \"@/pages/client/incident\";\nconst routes = [/* Auth */\n{\n  path: '/',\n  component: Login,\n  name: 'login',\n  meta: {\n    title: ' Login '\n  }\n}, {\n  path: '/register/health-care-worker',\n  name: 'register',\n  component: RegisterWorker,\n  meta: {\n    title: ' Register '\n  }\n},\n// register for client\n{\n  path: '/register/client',\n  name: 'registerClient',\n  component: RegisterClient,\n  meta: {\n    title: ' Register '\n  }\n}, /* Admin */\n{\n  path: '/admin',\n  component: Body,\n  meta: {\n    auth: true\n  },\n  children: [\n  // admin dashboard\n  {\n    path: 'dashboard',\n    name: 'adminDashboard',\n    component: AdminDashboard\n  },\n  // configuration\n  {\n    path: 'configuration',\n    name: 'adminConfiguration',\n    component: AdminConfiguration\n  },\n  // roles\n  {\n    path: 'roles',\n    name: 'adminRoles',\n    component: AdminRoles\n  },\n  // priority\n  {\n    path: 'priority',\n    name: 'adminPriority',\n    component: AdminPriority\n  },\n  // status\n  {\n    path: 'status',\n    name: 'adminStatus',\n    component: AdminStatus\n  },\n  // types\n  {\n    path: 'incident-types',\n    name: 'adminTypes',\n    component: AdminTypes\n  },\n  // users\n  {\n    path: 'users',\n    name: 'adminUsers',\n    component: AdminUsers\n  },\n  // activities\n  {\n    path: 'activities',\n    name: 'allActivities',\n    component: AllActivities\n  }]\n}, /* Client */\n{\n  path: '/client',\n  component: Body,\n  meta: {\n    auth: true\n  },\n  children: [\n  // \n  {\n    path: 'dashboard',\n    name: 'clientDashboard',\n    component: ClientDashboard\n  },\n  // incidents \n  {\n    path: 'incidents',\n    name: 'clientIncident',\n    component: ClientIncident\n  }]\n}, /* Worker */\n{\n  path: '/worker',\n  component: Body,\n  meta: {\n    auth: true\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'workerDashboard',\n    component: WorkerDashboard\n  }]\n}, {\n  path: '/default',\n  component: Body,\n  children: [{\n    path: '',\n    name: 'defaultRoot',\n    component: Default\n  }]\n}, {\n  path: '/my-activities',\n  component: Body,\n  meta: {\n    auth: true\n  },\n  children: [{\n    path: '',\n    name: 'myActivity',\n    component: MyActivity,\n    title: ' My Activity '\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const store = useStore();\n  if (to.meta.title) {\n    document.title = to.meta.title + ' | Home Care Agency';\n  }\n  const path = ['/', '/register/client', '/register/health-care-worker'];\n  // console.log(to.meta)\n  // console.log(store.state.auth.user)\n  // console.log(store.getters?.getUser)\n  // console.log(store.getters.getUser)\n\n  if (store.state.auth.user || path.includes(to.path)) {\n    return next();\n  }\n  next('/');\n});\nexport default router;\n//   if (path.includes(to.path) || localStorage.getItem('User')) {\n//     return next();\n//   }","map":{"version":3,"names":["createRouter","createWebHistory","useStore","Body","Default","Login","RegisterWorker","RegisterClient","AdminDashboard","ClientDashboard","WorkerDashboard","AdminConfiguration","MyActivity","AdminRoles","AdminPriority","AdminStatus","AdminTypes","AllActivities","AdminUsers","ClientIncident","routes","path","component","name","meta","title","auth","children","router","history","beforeEach","to","from","next","store","document","state","user","includes"],"sources":["C:/Users/chukwuebuka.ohaji/Workspace/Tests/HomeCareAgency/web/src/router/index.js"],"sourcesContent":["import {\r\n    createRouter,\r\n    createWebHistory\r\n} from \"vue-router\"\r\nimport {\r\n    useStore\r\n} from \"vuex\";\r\nimport Body from '../components/body';\r\nimport Default from '../pages/dashboard/defaultPage.vue';\r\n/* Auth */\r\nimport Login from '../pages/auth/login';\r\nimport RegisterWorker from '../pages/auth/register_worker';\r\nimport RegisterClient from '../pages/auth/register_client';\r\nimport AdminDashboard from '../pages/dashboard/admin';\r\nimport ClientDashboard from '../pages/dashboard/client';\r\nimport WorkerDashboard from '../pages/dashboard/worker';\r\nimport AdminConfiguration from '@/pages/admin/configuration';\r\nimport MyActivity from \"@/pages/myActivity.vue\";\r\nimport AdminRoles from \"@/pages/admin/roles\";\r\nimport AdminPriority from \"@/pages/admin/priority\";\r\nimport AdminStatus from \"@/pages/admin/status\";\r\nimport AdminTypes from \"@/pages/admin/types\";\r\nimport AllActivities from \"@/pages/admin/activities\";\r\nimport AdminUsers from \"@/pages/admin/users\";\r\nimport ClientIncident from \"@/pages/client/incident\";\r\n\r\nconst routes = [\r\n    /* Auth */\r\n    {\r\n        path: '/',\r\n        component: Login,\r\n        name: 'login',\r\n        meta: {\r\n            title: ' Login ',\r\n        },\r\n    },\r\n    {\r\n        path: '/register/health-care-worker',\r\n        name: 'register',\r\n        component: RegisterWorker,\r\n        meta: {\r\n            title: ' Register ',\r\n        }\r\n    },\r\n\r\n    // register for client\r\n    {\r\n        path: '/register/client',\r\n        name: 'registerClient',\r\n        component: RegisterClient,\r\n        meta: {\r\n            title: ' Register ',\r\n        }\r\n    },\r\n\r\n\r\n    /* Admin */\r\n    {\r\n        path: '/admin',\r\n        component: Body,\r\n        meta: {\r\n            auth: true,\r\n        },\r\n        children: [\r\n            // admin dashboard\r\n            {\r\n                path: 'dashboard',\r\n                name: 'adminDashboard',\r\n                component: AdminDashboard,\r\n            },\r\n\r\n            // configuration\r\n            {\r\n                path: 'configuration',\r\n                name: 'adminConfiguration',\r\n                component: AdminConfiguration,\r\n            },\r\n\r\n            // roles\r\n            {\r\n                path: 'roles',\r\n                name: 'adminRoles',\r\n                component: AdminRoles,\r\n            },\r\n\r\n            // priority\r\n            {\r\n                path: 'priority',\r\n                name: 'adminPriority',\r\n                component: AdminPriority,\r\n            },\r\n\r\n            // status\r\n            {\r\n                path: 'status',\r\n                name: 'adminStatus',\r\n                component: AdminStatus,\r\n            },\r\n\r\n            // types\r\n            {\r\n                path: 'incident-types',\r\n                name: 'adminTypes',\r\n                component: AdminTypes,\r\n            },\r\n\r\n            // users\r\n            {\r\n                path: 'users',\r\n                name: 'adminUsers',\r\n                component: AdminUsers,\r\n            },\r\n\r\n            // activities\r\n            {\r\n                path: 'activities',\r\n                name: 'allActivities',\r\n                component: AllActivities,\r\n            },\r\n        ]\r\n    },\r\n\r\n    /* Client */\r\n    {\r\n        path: '/client',\r\n        component: Body,\r\n        meta: {\r\n            auth: true,\r\n        },\r\n        children: [\r\n            // \r\n            {\r\n                path: 'dashboard',\r\n                name: 'clientDashboard',\r\n                component: ClientDashboard,\r\n            },\r\n\r\n            // incidents \r\n            {\r\n                path: 'incidents',\r\n                name: 'clientIncident',\r\n                component: ClientIncident,\r\n            },\r\n        ]\r\n    },\r\n\r\n    /* Worker */\r\n    {\r\n        path: '/worker',\r\n        component: Body,\r\n        meta: {\r\n            auth: true,\r\n        },\r\n        children: [{\r\n                path: 'dashboard',\r\n                name: 'workerDashboard',\r\n                component: WorkerDashboard,\r\n            },\r\n\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: '/default',\r\n        component: Body,\r\n        children: [{\r\n                path: '',\r\n                name: 'defaultRoot',\r\n                component: Default,\r\n            },\r\n\r\n        ]\r\n    },\r\n\r\n    {\r\n        path: '/my-activities',\r\n        component: Body,\r\n        meta: {\r\n            auth: true,\r\n        },\r\n        children: [{\r\n                path: '',\r\n                name: 'myActivity',\r\n                component: MyActivity,\r\n                title: ' My Activity ',\r\n            },\r\n\r\n        ]\r\n    },\r\n\r\n\r\n]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n})\r\nrouter.beforeEach((to, from, next) => {\r\n    const store = useStore();\r\n    if (to.meta.title) {\r\n        document.title = to.meta.title + ' | Home Care Agency';\r\n    }\r\n\r\n    const path = ['/', '/register/client', '/register/health-care-worker'];\r\n    // console.log(to.meta)\r\n    // console.log(store.state.auth.user)\r\n    // console.log(store.getters?.getUser)\r\n    // console.log(store.getters.getUser)\r\n\r\n    if (store.state.auth.user || path.includes(to.path)) {\r\n        return next();\r\n    }\r\n    next('/');\r\n});\r\nexport default router\r\n//   if (path.includes(to.path) || localStorage.getItem('User')) {\r\n//     return next();\r\n//   }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}