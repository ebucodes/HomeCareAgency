{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport formValidation from '@/mixins/common/formValidation';\nexport default {\n  mixins: [formValidation],\n  data() {\n    return {\n      active: true,\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      userName: '',\n      password: '',\n      loading: false\n    };\n  },\n  computed: {\n    isFormValid() {\n      return this.firstName && this.lastName && this.userName && this.password;\n    }\n  },\n  methods: {\n    show() {\n      this.active = !this.active;\n    },\n    async createUser() {\n      // Set loading state to true when submitting the form\n      this.loading = true;\n      const userData = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        phone: this.phone,\n        userName: this.userName,\n        password: this.password\n      };\n      axios.post('http://127.0.0.1:8000/api/auth/register/worker', userData).then(response => {\n        Swal.fire({\n          icon: 'success',\n          title: response.data.message\n        });\n        this.clearForm();\n        // Redirect to login page after successful registration\n        const router = useRouter();\n        router.push('/'); // Assuming '/' is the path for the login page\n      }).catch(error => {\n        Swal.fire({\n          icon: 'error',\n          title: error.response.data.message,\n          text: error.response.data.data\n        });\n      });\n    },\n    clearForm() {\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n      this.userName = '';\n      this.password = '';\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","useRouter","formValidation","mixins","data","active","firstName","lastName","email","phone","userName","password","loading","computed","isFormValid","methods","show","createUser","userData","post","then","response","fire","icon","title","message","clearForm","router","push","catch","error","text"],"sources":["C:\\Users\\chukwuebuka.ohaji\\Workspace\\Tests\\HomeCareAgency\\web\\src\\pages\\auth\\register_worker.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container-fluid p-0\">\r\n            <div class=\"row m-0\">\r\n                <!-- Left Column -->\r\n                <div class=\"col-xl-5 b-center bg-size\"\r\n                    :style=\"{ backgroundImage: 'url(' + require('../../assets/images/login/3.jpg') + ')' }\"\r\n                    style=\"background-size: cover; background-position: center center; display: block;\">\r\n                    <img class=\"bg-img-cover bg-center\" src=\"../../assets/images/login/3.jpg\" alt=\"loginpage\"\r\n                        style=\"display: none;\" />\r\n                </div>\r\n                <!-- Right Column -->\r\n                <div class=\"col-xl-7 p-0\">\r\n                    <div class=\"login-card\">\r\n                        <div>\r\n                            <div>\r\n                                <a class=\"logo\">\r\n                                    <img class=\"img-fluid for-light\" src=\"../../assets/images/logo/logo.png\"\r\n                                        alt=\"loginpage\" />\r\n                                    <img class=\"img-fluid for-dark\" src=\"../../assets/images/logo/logo_dark.png\"\r\n                                        alt=\"loginpage\" />\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"login-main\">\r\n                                <form class=\"theme-form needs-validation\" novalidate=\"\" @submit.prevent=\"createUser\">\r\n                                    <h4>Create your account</h4>\r\n                                    <p>Enter your personal details to register as a Health Care Worker</p>\r\n\r\n                                    <!-- First Name -->\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">First Name <span class=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input v-model=\"firstName\" class=\"form-control\" type=\"text\" required\r\n                                            placeholder=\"First name\" />\r\n                                    </div>\r\n\r\n                                    <!-- Last Name -->\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Last Name<span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input v-model=\"lastName\" class=\"form-control\" type=\"text\" required\r\n                                            placeholder=\"Last name\" />\r\n                                    </div>\r\n\r\n                                    <!-- Email Address -->\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Email Address (Optional)</label>\r\n                                        <input v-model=\"email\" class=\"form-control\" type=\"email\"\r\n                                            placeholder=\"Test@gmail.com\" />\r\n                                    </div>\r\n\r\n                                    <!-- Phone Number -->\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Phone Number (Optional)</label>\r\n                                        <input v-model=\"phone\" class=\"form-control\" type=\"text\"\r\n                                            placeholder=\"1234567890\" />\r\n                                    </div>\r\n\r\n                                    <!-- Username -->\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Username <span class=\"text-danger\">*</span>\r\n                                        </label>\r\n                                        <input v-model=\"userName\" class=\"form-control\" type=\"text\" required\r\n                                            placeholder=\"Username\" />\r\n                                    </div>\r\n\r\n                                    <!-- Password -->\r\n                                    <div class=\"form-group mb-2\">\r\n                                        <label class=\"col-form-label\">Password</label>\r\n                                        <div class=\"form-input position-relative\">\r\n                                            <input v-model=\"password\" class=\"form-control\"\r\n                                                :type=\"active ? 'password' : 'text'\" name=\"login[password]\" required\r\n                                                placeholder=\"*********\" />\r\n                                            <div class=\"show-hide\"><span :class=\"active ? 'show' : 'hide'\"\r\n                                                    @click.prevent=\"show\"></span></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- Submit Button -->\r\n                                    <div class=\"form-group mb-6\">\r\n                                        <button :disabled=\"!isFormValid || loading\" class=\"btn btn-primary btn-block\">\r\n                                            <span v-if=\"loading\">Please Wait...</span>\r\n                                            <span v-else>Register as a Client</span>\r\n                                        </button>\r\n                                        <!-- <button :disabled=\"!isFormValid\" class=\"btn btn-primary btn-block\">\r\n                                            Register as a Health Care Worker\r\n                                        </button> -->\r\n                                    </div>\r\n\r\n                                    <!-- Links -->\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        <a class=\"btn-link ms-2\" href=\"/register/health-care-worker\">Register as a\r\n                                            Health Care\r\n                                            Worker</a>\r\n                                    </p>\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        Already have an account?\r\n                                        <router-link class=\"ms-2\" tag=\"a\" to=\"/\">\r\n                                            Login\r\n                                        </router-link>\r\n                                    </p>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport formValidation from '@/mixins/common/formValidation';\r\n\r\nexport default {\r\n    mixins: [formValidation],\r\n    data() {\r\n        return {\r\n            active: true,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            userName: '',\r\n            password: '',\r\n            loading: false\r\n        }\r\n    },\r\n    computed: {\r\n        isFormValid() {\r\n            return (\r\n                this.firstName &&\r\n                this.lastName &&\r\n                this.userName &&\r\n                this.password\r\n            );\r\n        }\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.active = !this.active;\r\n        },\r\n        async createUser() {\r\n            // Set loading state to true when submitting the form\r\n            this.loading = true;\r\n\r\n            const userData = {\r\n                firstName: this.firstName,\r\n                lastName: this.lastName,\r\n                email: this.email,\r\n                phone: this.phone,\r\n                userName: this.userName,\r\n                password: this.password\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:8000/api/auth/register/worker', userData)\r\n                .then(response => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: response.data.message,\r\n                    });\r\n                    this.clearForm();\r\n                    // Redirect to login page after successful registration\r\n                    const router = useRouter();\r\n                    router.push('/'); // Assuming '/' is the path for the login page\r\n\r\n                })\r\n                .catch(error => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: error.response.data.message,\r\n                        text: error.response.data.data\r\n                    });\r\n                });\r\n\r\n        },\r\n        clearForm() {\r\n            this.firstName = '';\r\n            this.lastName = '';\r\n            this.email = '';\r\n            this.phone = '';\r\n            this.userName = '';\r\n            this.password = '';\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";AAgHA,OAAOA,IAAG,MAAO,aAAa;AAC9B,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,cAAa,MAAO,gCAAgC;AAE3D,eAAe;EACXC,MAAM,EAAE,CAACD,cAAc,CAAC;EACxBE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,OACI,IAAI,CAACR,SAAQ,IACb,IAAI,CAACC,QAAO,IACZ,IAAI,CAACG,QAAO,IACZ,IAAI,CAACC,QAAO;IAEpB;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,IAAIA,CAAA,EAAG;MACH,IAAI,CAACX,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;IAC9B,CAAC;IACD,MAAMY,UAAUA,CAAA,EAAG;MACf;MACA,IAAI,CAACL,OAAM,GAAI,IAAI;MAEnB,MAAMM,QAAO,GAAI;QACbZ,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC;MAEDX,KAAK,CAACmB,IAAI,CAAC,gDAAgD,EAAED,QAAQ,EAChEE,IAAI,CAACC,QAAO,IAAK;QACdtB,IAAI,CAACuB,IAAI,CAAC;UACNC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEH,QAAQ,CAACjB,IAAI,CAACqB;QACzB,CAAC,CAAC;QACF,IAAI,CAACC,SAAS,CAAC,CAAC;QAChB;QACA,MAAMC,MAAK,GAAI1B,SAAS,CAAC,CAAC;QAC1B0B,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAEtB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZ/B,IAAI,CAACuB,IAAI,CAAC;UACNC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAEM,KAAK,CAACT,QAAQ,CAACjB,IAAI,CAACqB,OAAO;UAClCM,IAAI,EAAED,KAAK,CAACT,QAAQ,CAACjB,IAAI,CAACA;QAC9B,CAAC,CAAC;MACN,CAAC,CAAC;IAEV,CAAC;IACDsB,SAASA,CAAA,EAAG;MACR,IAAI,CAACpB,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,QAAO,GAAI,EAAE;IACtB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}