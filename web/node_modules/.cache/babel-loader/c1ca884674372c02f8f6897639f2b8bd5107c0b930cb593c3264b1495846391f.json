{"ast":null,"code":"// auth.js\n\n// import axios from 'axios';\nimport axios from \"@/utils/axiosHttp\";\nconst state = {\n  user: null,\n  token: null,\n  isLoggedIn: false\n};\nconst getters = {\n  getUser: state => state.user,\n  getToken: state => state.token,\n  isLoggedIn: state => state.isLoggedIn\n};\nconst actions = {\n  async loginAsync({\n    commit\n  }, payload) {\n    try {\n      const response = await axios.post('/auth/login', payload);\n      console.log(response);\n      // const { user, token } = response.data;\n    } catch (error) {\n      throw new Error(error.response.data.message || 'Login failed');\n    }\n    setTimeout(() => {\n      // commit('increment')\n    }, 1000);\n  },\n  async login({\n    commit\n  }, {\n    username,\n    password\n  }) {\n    try {\n      // const response = await axios.post('/auth/login', {\n      //   username,\n      //   password,\n      // });\n      // const { user, token } = response.data;\n      commit('setUser', username);\n      commit('setToken', password);\n      commit('setLoggedIn', true);\n    } catch (error) {\n      throw new Error(error.response.data.message || 'Login failed');\n    }\n  },\n  logout({\n    commit\n  }) {\n    commit('setUser', null);\n    commit('setToken', null);\n    commit('setLoggedIn', false);\n  }\n};\nconst mutations = {\n  setUser(state, user) {\n    state.user = user;\n  },\n  setToken(state, token) {\n    state.token = token;\n  },\n  setLoggedIn(state, status) {\n    state.isLoggedIn = status;\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","user","token","isLoggedIn","getters","getUser","getToken","actions","loginAsync","commit","payload","response","post","console","log","error","Error","data","message","setTimeout","login","username","password","logout","mutations","setUser","setToken","setLoggedIn","status"],"sources":["C:/Users/daniel.olang/Documents/Learn/projects/HomeCareAgency/web/src/store/modules/auth.js"],"sourcesContent":["// auth.js\r\n\r\n// import axios from 'axios';\r\nimport axios from \"@/utils/axiosHttp\";\r\n\r\nconst state = {\r\n  user: null,\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst getters = {\r\n  getUser: state => state.user,\r\n  getToken: state => state.token,\r\n  isLoggedIn: state => state.isLoggedIn,\r\n};\r\n\r\nconst actions = {\r\n  async loginAsync({ commit }, payload) {\r\n\r\n    \r\n    try {\r\n      const response = await axios.post('/auth/login', payload);\r\n      console.log(response)\r\n      // const { user, token } = response.data;\r\n\r\n    } catch (error) {\r\n      throw new Error(error.response.data.message || 'Login failed');\r\n    }\r\n    setTimeout(() => {\r\n      // commit('increment')\r\n    }, 1000)\r\n  },\r\n  async login({ commit }, { username, password }) {\r\n    try {\r\n      // const response = await axios.post('/auth/login', {\r\n      //   username,\r\n      //   password,\r\n      // });\r\n      // const { user, token } = response.data;\r\n      commit('setUser', username);\r\n      commit('setToken', password);\r\n      commit('setLoggedIn', true);\r\n    } catch (error) {\r\n      throw new Error(error.response.data.message || 'Login failed');\r\n    }\r\n  },\r\n  logout({ commit }) {\r\n    commit('setUser', null);\r\n    commit('setToken', null);\r\n    commit('setLoggedIn', false);\r\n  },\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state, user) {\r\n    state.user = user;\r\n  },\r\n  setToken(state, token) {\r\n    state.token = token;\r\n  },\r\n  setLoggedIn(state, status) {\r\n    state.isLoggedIn = status;\r\n  },\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,mBAAmB;AAErC,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAEL,KAAK,IAAIA,KAAK,CAACC,IAAI;EAC5BK,QAAQ,EAAEN,KAAK,IAAIA,KAAK,CAACE,KAAK;EAC9BC,UAAU,EAAEH,KAAK,IAAIA,KAAK,CAACG;AAC7B,CAAC;AAED,MAAMI,OAAO,GAAG;EACd,MAAMC,UAAUA,CAAC;IAAEC;EAAO,CAAC,EAAEC,OAAO,EAAE;IAGpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,aAAa,EAAEF,OAAO,CAAC;MACzDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB;IAEF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACM,IAAI,CAACC,OAAO,IAAI,cAAc,CAAC;IAChE;IACAC,UAAU,CAAC,MAAM;MACf;IAAA,CACD,EAAE,IAAI,CAAC;EACV,CAAC;EACD,MAAMC,KAAKA,CAAC;IAAEX;EAAO,CAAC,EAAE;IAAEY,QAAQ;IAAEC;EAAS,CAAC,EAAE;IAC9C,IAAI;MACF;MACA;MACA;MACA;MACA;MACAb,MAAM,CAAC,SAAS,EAAEY,QAAQ,CAAC;MAC3BZ,MAAM,CAAC,UAAU,EAAEa,QAAQ,CAAC;MAC5Bb,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACM,IAAI,CAACC,OAAO,IAAI,cAAc,CAAC;IAChE;EACF,CAAC;EACDK,MAAMA,CAAC;IAAEd;EAAO,CAAC,EAAE;IACjBA,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;IACvBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;IACxBA,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;EAC9B;AACF,CAAC;AAED,MAAMe,SAAS,GAAG;EAChBC,OAAOA,CAACzB,KAAK,EAAEC,IAAI,EAAE;IACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDyB,QAAQA,CAAC1B,KAAK,EAAEE,KAAK,EAAE;IACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDyB,WAAWA,CAAC3B,KAAK,EAAE4B,MAAM,EAAE;IACzB5B,KAAK,CAACG,UAAU,GAAGyB,MAAM;EAC3B;AACF,CAAC;AAED,eAAe;EACb5B,KAAK;EACLI,OAAO;EACPG,OAAO;EACPiB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}