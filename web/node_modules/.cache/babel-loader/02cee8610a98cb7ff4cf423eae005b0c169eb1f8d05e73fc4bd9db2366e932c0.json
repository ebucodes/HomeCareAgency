{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'login',\n  data() {\n    return {\n      result: {\n        email: '',\n        password: ''\n      },\n      user: {\n        email: {\n          value: 'test@admin.com',\n          errormsg: ''\n        },\n        password: {\n          value: 'test@123456',\n          errormsg: ''\n        }\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      if (!this.user.password.value || this.user.password.value.length < 7) {\n        this.user.password.errormsg = 'min length 7';\n      } else {\n        this.user.password.errormsg = '';\n      }\n      if (!this.user.email.value) {\n        this.user.email.errormsg = 'empty not allowed';\n      } else if (!this.validEmail(this.user.email.value)) {\n        this.user.email.errormsg = 'Valid email required.';\n      } else {\n        this.user.email.errormsg = '';\n      }\n      if (!this.user.email.errormsg && !this.user.password.errormsg && this.user.email.value != 'test@admin.com' || this.user.password.value != 'test@123456') {\n        alert(\"wrong credenstials\");\n      }\n      if (!this.user.email.errormsg && !this.user.password.errormsg && this.user.email.value == 'test@admin.com' && this.user.password.value == 'test@123456') {\n        this.result = {\n          email: this.user.email.value,\n          password: this.user.password.value\n        };\n        localStorage.setItem('User', JSON.stringify({\n          email: this.user.email.value,\n          useer: true\n        }));\n        this.logging = true;\n        this.$router.push('/');\n      }\n    },\n    validEmail: function (email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n  }\n};","map":{"version":3,"names":["name","data","result","email","password","user","value","errormsg","created","methods","login","length","validEmail","alert","localStorage","setItem","JSON","stringify","useer","logging","$router","push","re","test"],"sources":["C:\\Users\\chukwuebuka.ohaji\\Workspace\\Tests\\HomeCareAgency\\web\\src\\pages\\auth\\login.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row \">\r\n                <div class=\"col-12 p-0\">\r\n                    <div class=\"login-card\">\r\n                        <div>\r\n                            <div class=\"login-main\">\r\n                                <form class=\"theme-form\">\r\n                                    <h4>Sign in to account</h4>\r\n                                    <p>Enter your email & password to login</p>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"col-form-label\">Email Address</label>\r\n                                        <input class=\"form-control\" type=\"email\" required\r\n                                            placeholder=\"Please enter your email address\" v-model=\"user.email.value\">\r\n                                        <span class=\"validate-error\"\r\n                                            v-if=\"!user.email.value || !validEmail(user.email.value)\">{{\r\n                                                user.email.errormsg }}</span>\r\n\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label class=\"col-form-label\">Password</label>\r\n                                        <div class=\"form-input position-relative\">\r\n                                            <input class=\"form-control\" type=\"password\" name=\"login[password]\"\r\n                                                required=\"\" placeholder=\"*********\" v-model=\"user.password.value\">\r\n                                            <span class=\"validate-error\" v-if=\"user.password.value.length < 7\">{{\r\n                                                user.password.errormsg\r\n                                            }}</span>\r\n\r\n                                            <div class=\"show-hide\"><span class=\"show\"> </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-0\">\r\n                                        <div class=\"checkbox p-0\">\r\n                                            <input id=\"checkbox1\" type=\"checkbox\">\r\n                                            <label class=\"text-muted\" for=\"checkbox1\">Remember password</label>\r\n                                        </div><router-link class=\"link\" to=\"/authentication/forgetpassword\"> Forgot\r\n                                            password?</router-link>\r\n                                        <div class=\"text-end mt-3\">\r\n                                            <button class=\"btn btn-primary btn-block w-100\" type=\"submit\"\r\n                                                @click.prevent=\"login\">Sign\r\n                                                in</button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <p class=\"mt-4 mb-0 text-center\">Don't have account?<a class=\"ms-2\"\r\n                                            href=\"sign-up.html\">Create\r\n                                            Account</a></p>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: 'login',\r\n    data() {\r\n        return {\r\n\r\n            result: { email: '', password: '' },\r\n\r\n            user: {\r\n                email: {\r\n                    value: 'test@admin.com',\r\n                    errormsg: ''\r\n                },\r\n                password: {\r\n                    value: 'test@123456',\r\n                    errormsg: ''\r\n                }\r\n            }\r\n        };\r\n    },\r\n\r\n    created() {\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        login() {\r\n            if (!this.user.password.value || this.user.password.value.length < 7) {\r\n                this.user.password.errormsg = 'min length 7'\r\n            } else { this.user.password.errormsg = '' }\r\n\r\n            if (!this.user.email.value) {\r\n                this.user.email.errormsg = 'empty not allowed'\r\n            } else if (!this.validEmail(this.user.email.value)) {\r\n                this.user.email.errormsg = 'Valid email required.'\r\n            }\r\n            else {\r\n                this.user.email.errormsg = ''\r\n            }\r\n            if (!this.user.email.errormsg && !this.user.password.errormsg && this.user.email.value != 'test@admin.com' || this.user.password.value != 'test@123456') {\r\n                alert(\"wrong credenstials\")\r\n            }\r\n            if (!this.user.email.errormsg && !this.user.password.errormsg && this.user.email.value == 'test@admin.com' && this.user.password.value == 'test@123456') {\r\n\r\n                this.result = { email: this.user.email.value, password: this.user.password.value }\r\n\r\n                localStorage.setItem('User', JSON.stringify({ email: this.user.email.value, useer: true }))\r\n                this.logging = true\r\n                this.$router.push('/')\r\n\r\n\r\n            }\r\n        },\r\n        validEmail: function (email) {\r\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            return re.test(email)\r\n        }\r\n    },\r\n};\r\n</script>\r\n"],"mappings":";AAiEA,eAAe;EACXA,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MAEHC,MAAM,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MAEnCC,IAAI,EAAE;QACFF,KAAK,EAAE;UACHG,KAAK,EAAE,gBAAgB;UACvBC,QAAQ,EAAE;QACd,CAAC;QACDH,QAAQ,EAAE;UACNE,KAAK,EAAE,aAAa;UACpBC,QAAQ,EAAE;QACd;MACJ;IACJ,CAAC;EACL,CAAC;EAEDC,OAAOA,CAAA,EAAG,CAEV,CAAC;EAEDC,OAAO,EAAE;IAELC,KAAKA,CAAA,EAAG;MACJ,IAAI,CAAC,IAAI,CAACL,IAAI,CAACD,QAAQ,CAACE,KAAI,IAAK,IAAI,CAACD,IAAI,CAACD,QAAQ,CAACE,KAAK,CAACK,MAAK,GAAI,CAAC,EAAE;QAClE,IAAI,CAACN,IAAI,CAACD,QAAQ,CAACG,QAAO,GAAI,cAAa;MAC/C,OAAO;QAAE,IAAI,CAACF,IAAI,CAACD,QAAQ,CAACG,QAAO,GAAI,EAAC;MAAE;MAE1C,IAAI,CAAC,IAAI,CAACF,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE;QACxB,IAAI,CAACD,IAAI,CAACF,KAAK,CAACI,QAAO,GAAI,mBAAkB;MACjD,OAAO,IAAI,CAAC,IAAI,CAACK,UAAU,CAAC,IAAI,CAACP,IAAI,CAACF,KAAK,CAACG,KAAK,CAAC,EAAE;QAChD,IAAI,CAACD,IAAI,CAACF,KAAK,CAACI,QAAO,GAAI,uBAAsB;MACrD,OACK;QACD,IAAI,CAACF,IAAI,CAACF,KAAK,CAACI,QAAO,GAAI,EAAC;MAChC;MACA,IAAI,CAAC,IAAI,CAACF,IAAI,CAACF,KAAK,CAACI,QAAO,IAAK,CAAC,IAAI,CAACF,IAAI,CAACD,QAAQ,CAACG,QAAO,IAAK,IAAI,CAACF,IAAI,CAACF,KAAK,CAACG,KAAI,IAAK,gBAAe,IAAK,IAAI,CAACD,IAAI,CAACD,QAAQ,CAACE,KAAI,IAAK,aAAa,EAAE;QACrJO,KAAK,CAAC,oBAAoB;MAC9B;MACA,IAAI,CAAC,IAAI,CAACR,IAAI,CAACF,KAAK,CAACI,QAAO,IAAK,CAAC,IAAI,CAACF,IAAI,CAACD,QAAQ,CAACG,QAAO,IAAK,IAAI,CAACF,IAAI,CAACF,KAAK,CAACG,KAAI,IAAK,gBAAe,IAAK,IAAI,CAACD,IAAI,CAACD,QAAQ,CAACE,KAAI,IAAK,aAAa,EAAE;QAErJ,IAAI,CAACJ,MAAK,GAAI;UAAEC,KAAK,EAAE,IAAI,CAACE,IAAI,CAACF,KAAK,CAACG,KAAK;UAAEF,QAAQ,EAAE,IAAI,CAACC,IAAI,CAACD,QAAQ,CAACE;QAAM;QAEjFQ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,KAAK,EAAE,IAAI,CAACE,IAAI,CAACF,KAAK,CAACG,KAAK;UAAEY,KAAK,EAAE;QAAK,CAAC,CAAC;QAC1F,IAAI,CAACC,OAAM,GAAI,IAAG;QAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;MAGzB;IACJ,CAAC;IACDT,UAAU,EAAE,SAAAA,CAAUT,KAAK,EAAE;MACzB,MAAMmB,EAAC,GAAI,uJAAsJ;MACjK,OAAOA,EAAE,CAACC,IAAI,CAACpB,KAAK;IACxB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}