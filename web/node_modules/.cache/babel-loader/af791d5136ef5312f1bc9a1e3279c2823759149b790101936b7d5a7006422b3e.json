{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      workers: [],\n      // Array to store the list of active healthcare workers\n      selectedWorker: '' // Variable to store the selected healthcare worker ID\n    };\n  },\n  mounted() {\n    // Fetch list of active healthcare workers when the component is mounted\n    this.fetchWorkers();\n  },\n  methods: {\n    fetchWorkers() {\n      // Make an API call to fetch the list of active healthcare workers\n      axios.get('http://127.0.0.1:8000/api/fetch-workers').then(response => {\n        // Assign the fetched workers to the data property\n        this.workers = response.data;\n      }).catch(error => {\n        console.error('Error fetching workers:', error);\n      });\n    },\n    registerClient() {\n      // Perform client registration after selecting a healthcare worker\n      // First, check if a healthcare worker is selected\n      if (!this.selectedWorker) {\n        // Show an error message if no healthcare worker is selected\n        // You can use SweetAlert here as well\n        alert('Please select a healthcare worker');\n        return;\n      }\n\n      // Make an API call to register the client\n      axios.post('http://127.0.0.1:8000/api/auth/register/client', {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        phoneNumber: this.phoneNumber,\n        workerId: this.selectedWorker,\n        password: this.password\n      }).then(response => {\n        // Handle the response after client registration\n        // You can show a success message using SweetAlert here\n        console.log('Client registered successfully:', response.data);\n      }).catch(error => {\n        // Handle any errors that occur during client registration\n        // You can show an error message using SweetAlert here\n        console.error('Error registering client:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","workers","selectedWorker","mounted","fetchWorkers","methods","get","then","response","catch","error","console","registerClient","alert","post","firstName","lastName","email","phoneNumber","workerId","password","log"],"sources":["C:\\Users\\chukwuebuka.ohaji\\Workspace\\Tests\\HomeCareAgency\\web\\src\\pages\\auth\\register_client.vue"],"sourcesContent":["<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            workers: [], // Array to store the list of active healthcare workers\r\n            selectedWorker: '' // Variable to store the selected healthcare worker ID\r\n        }\r\n    },\r\n    mounted() {\r\n        // Fetch list of active healthcare workers when the component is mounted\r\n        this.fetchWorkers();\r\n    },\r\n    methods: {\r\n        fetchWorkers() {\r\n            // Make an API call to fetch the list of active healthcare workers\r\n            axios.get('http://127.0.0.1:8000/api/fetch-workers')\r\n                .then(response => {\r\n                    // Assign the fetched workers to the data property\r\n                    this.workers = response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching workers:', error);\r\n                });\r\n        },\r\n        registerClient() {\r\n            // Perform client registration after selecting a healthcare worker\r\n            // First, check if a healthcare worker is selected\r\n            if (!this.selectedWorker) {\r\n                // Show an error message if no healthcare worker is selected\r\n                // You can use SweetAlert here as well\r\n                alert('Please select a healthcare worker');\r\n                return;\r\n            }\r\n\r\n            // Make an API call to register the client\r\n            axios.post('http://127.0.0.1:8000/api/auth/register/client', {\r\n                firstName: this.firstName,\r\n                lastName: this.lastName,\r\n                email: this.email,\r\n                phoneNumber: this.phoneNumber,\r\n                workerId: this.selectedWorker,\r\n                password: this.password\r\n            })\r\n                .then(response => {\r\n                    // Handle the response after client registration\r\n                    // You can show a success message using SweetAlert here\r\n                    console.log('Client registered successfully:', response.data);\r\n                })\r\n                .catch(error => {\r\n                    // Handle any errors that occur during client registration\r\n                    // You can show an error message using SweetAlert here\r\n                    console.error('Error registering client:', error);\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div>\r\n        <div class=\"container-fluid p-0\">\r\n            <div class=\"row m-0\">\r\n                <div class=\"col-xl-5 b-center bg-size \"\r\n                    :style=\"{ backgroundImage: 'url(' + require('../../assets/images/login/3.jpg') + ')' }\"\r\n                    style=\"background-size: cover; background-position: center center; display: block;\">\r\n                    <img class=\"bg-img-cover bg-center\" src=\"../../assets/images/login/3.jpg\" alt=\"looginpage\"\r\n                        style=\"display: none;\" />\r\n                </div>\r\n                <div class=\"col-xl-7 p-0\">\r\n                    <div class=\"login-card\">\r\n                        <div>\r\n                            <div>\r\n                                <a class=\"logo\">\r\n                                    <img class=\"img-fluid for-light\" src=\"../../assets/images/logo/logo.png\"\r\n                                        alt=\"looginpage\" />\r\n                                    <img class=\"img-fluid for-dark\" src=\"../../assets/images/logo/logo_dark.png\"\r\n                                        alt=\"looginpage\" />\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"login-main\">\r\n                                <form class=\"theme-form needs-validation\" novalidate=\"\">\r\n                                    <h4>Create your account</h4>\r\n                                    <p>Enter your personal details to register as a Client</p>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">First Name <span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"First name\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Last Name<span\r\n                                                class=\"text-danger\">*</span></label>\r\n                                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Last name\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Email Address (Optional)</label>\r\n                                        <input class=\"form-control\" type=\"email\" placeholder=\"Test@gmail.com\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Phone Number (Optional)</label>\r\n                                        <input class=\"form-control\" type=\"text\" placeholder=\"1234567890\" />\r\n                                    </div>\r\n                                    <div class=\"form-group mb-1\">\r\n                                        <label class=\"col-form-label\">Health Care Worker</label>\r\n                                        <select name=\"\" class=\"form-control\" id=\"\">\r\n                                            <option value=\"\">--Select--</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-2\">\r\n                                        <label class=\"col-form-label\">Password</label>\r\n                                        <div class=\"form-input position-relative\">\r\n\r\n                                            <input class=\"form-control\" :type=\"active ? 'password' : 'text'\"\r\n                                                name=\"login[password]\" required=\"\" placeholder=\"*********\" />\r\n                                            <div class=\"show-hide\"><span :class=\"active ? 'show' : 'hide'\"\r\n                                                    @click.prevent=\"show\">\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group mb-6\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Register as a Client\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        <a class=\"btn-link ms-2\" href=\"/register/worker\">Register as a Health Care\r\n                                            Worker</a>\r\n                                    </p>\r\n\r\n                                    <p class=\"mt-4 mb-0\">\r\n                                        Already have an account?\r\n                                        <router-link class=\"ms-2\" tag=\"a\" to=\"/\">\r\n                                            Login\r\n                                        </router-link>\r\n                                    </p>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n"],"mappings":"AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MAAE;MACbC,cAAc,EAAE,EAAC,CAAE;IACvB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLD,YAAYA,CAAA,EAAG;MACX;MACAL,KAAK,CAACO,GAAG,CAAC,yCAAyC,EAC9CC,IAAI,CAACC,QAAO,IAAK;QACd;QACA,IAAI,CAACP,OAAM,GAAIO,QAAQ,CAACR,IAAI;MAChC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACV,CAAC;IACDE,cAAcA,CAAA,EAAG;MACb;MACA;MACA,IAAI,CAAC,IAAI,CAACV,cAAc,EAAE;QACtB;QACA;QACAW,KAAK,CAAC,mCAAmC,CAAC;QAC1C;MACJ;;MAEA;MACAd,KAAK,CAACe,IAAI,CAAC,gDAAgD,EAAE;QACzDC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BC,QAAQ,EAAE,IAAI,CAACjB,cAAc;QAC7BkB,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC,EACIb,IAAI,CAACC,QAAO,IAAK;QACd;QACA;QACAG,OAAO,CAACU,GAAG,CAAC,iCAAiC,EAAEb,QAAQ,CAACR,IAAI,CAAC;MACjE,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACZ;QACA;QACAC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}