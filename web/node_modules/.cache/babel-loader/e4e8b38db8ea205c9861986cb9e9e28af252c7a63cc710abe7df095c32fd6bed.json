{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\n// auth.js\n\n// import axios from 'axios';\nimport axios from \"@/utils/axiosHttp\";\nimport router from \"@/router\";\nconst state = {\n  user: localStorage.getItem('HCA_LOGGER'),\n  token: localStorage.getItem('HCA_TOKEN'),\n  role: localStorage.getItem('HCA_ROLE'),\n  isLoggedIn: false\n};\nconst getters = {\n  getUser: state => JSON.parse(atob(state.user)),\n  getToken: state => state.token,\n  isLoggedIn: state => state.isLoggedIn\n};\nconst actions = {\n  async loginAsync({\n    commit,\n    state\n  }, payload) {\n    try {\n      const response = await axios.post('/auth/login', payload).then(res => {\n        return res.data;\n      });\n      if (response) {\n        localStorage.setItem(\"HCA_TOKEN\", response?.data?.authorization?.token);\n        localStorage.setItem(\"HCA_LOGGER\", btoa(JSON.stringify(response?.data?.user)));\n        localStorage.setItem(\"HCA_ROLE\", response?.data?.user?.role);\n\n        // console.log(response?.data)\n\n        commit('setUser', btoa(JSON.stringify(response?.data?.user)));\n        commit('setToken', response?.data.authorization?.token);\n        commit('setRole', response?.data.user?.role);\n        commit('setLoggedIn', true);\n\n        // state.role\n\n        // window.location.href = `${VITE_API_WEB}/dashboard`\n        // window.location.href = `${import.meta.env.VITE_API_WEB}${state.role}/dashboard`\n\n        router.push(`${state.role}/dashboard`);\n      }\n      return response;\n      // const { user, token } = response.data;\n    } catch (error) {\n      // throw new Error(error.response || 'Login failed');\n    }\n  },\n  logout({\n    commit\n  }) {\n    localStorage.removeItem(\"HCA_TOKEN\");\n    localStorage.removeItem(\"HCA_LOGGER\");\n    localStorage.removeItem(\"HCA_ROLE\");\n    commit('setUser', null);\n    commit('setToken', null);\n    commit('setLoggedIn', false);\n    window.location.href = `${import.meta.env.VITE_API_WEB}`;\n  }\n};\nconst mutations = {\n  setUser(state, user) {\n    state.user = user;\n  },\n  setToken(state, token) {\n    state.token = token;\n  },\n  setRole(state, role) {\n    state.role = role;\n  },\n  setLoggedIn(state, status) {\n    state.isLoggedIn = status;\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","router","state","user","localStorage","getItem","token","role","isLoggedIn","getters","getUser","JSON","parse","atob","getToken","actions","loginAsync","commit","payload","response","post","then","res","data","setItem","authorization","btoa","stringify","push","error","logout","removeItem","window","location","href","import","meta","env","VITE_API_WEB","mutations","setUser","setToken","setRole","setLoggedIn","status"],"sources":["C:/Users/chukwuebuka.ohaji/Workspace/Tests/HomeCareAgency/web/src/store/modules/auth.js"],"sourcesContent":["// auth.js\r\n\r\n// import axios from 'axios';\r\nimport axios from \"@/utils/axiosHttp\";\r\nimport router from \"@/router\";\r\n\r\nconst state = {\r\n  user: localStorage.getItem('HCA_LOGGER'),\r\n  token: localStorage.getItem('HCA_TOKEN'),\r\n  role: localStorage.getItem('HCA_ROLE'),\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst getters = {\r\n  getUser: state => JSON.parse(atob(state.user)),\r\n  getToken: state => state.token,\r\n  isLoggedIn: state => state.isLoggedIn,\r\n};\r\n\r\nconst actions = {\r\n  async loginAsync({ commit, state }, payload) {\r\n  \r\n    try {\r\n      const response = await axios.post('/auth/login', payload)\r\n              .then((res) => {\r\n                  return res.data;\r\n              });\r\n      if (response) {\r\n        localStorage.setItem(\"HCA_TOKEN\", response?.data?.authorization?.token);\r\n        localStorage.setItem(\"HCA_LOGGER\", btoa(JSON.stringify(response?.data?.user)));\r\n        localStorage.setItem(\"HCA_ROLE\", response?.data?.user?.role);\r\n        \r\n        // console.log(response?.data)\r\n\r\n        commit('setUser', btoa(JSON.stringify(response?.data?.user)));\r\n        commit('setToken', response?.data.authorization?.token);\r\n        commit('setRole', response?.data.user?.role);\r\n        commit('setLoggedIn', true);\r\n\r\n        // state.role\r\n\r\n        // window.location.href = `${VITE_API_WEB}/dashboard`\r\n        // window.location.href = `${import.meta.env.VITE_API_WEB}${state.role}/dashboard`\r\n\r\n        router.push(`${state.role}/dashboard`)\r\n\r\n      }\r\n      return response;\r\n      // const { user, token } = response.data;\r\n\r\n    } catch (error) {\r\n      // throw new Error(error.response || 'Login failed');\r\n    }\r\n    \r\n  },\r\n  \r\n  logout({ commit }) {\r\n    localStorage.removeItem(\"HCA_TOKEN\");\r\n    localStorage.removeItem(\"HCA_LOGGER\");\r\n    localStorage.removeItem(\"HCA_ROLE\");\r\n    commit('setUser', null);\r\n    commit('setToken', null);\r\n    commit('setLoggedIn', false);\r\n    window.location.href = `${import.meta.env.VITE_API_WEB}`\r\n  },\r\n};\r\n\r\nconst mutations = {\r\n  setUser(state, user) {\r\n    state.user = user;\r\n  },\r\n  setToken(state, token) {\r\n    state.token = token;\r\n  },\r\n  setRole(state, role) {\r\n    state.role = role;\r\n  },\r\n  setLoggedIn(state, status) {\r\n    state.isLoggedIn = status;\r\n  },\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n};\r\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACxCC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACxCE,IAAI,EAAEH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACtCG,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAER,KAAK,IAAIS,IAAI,CAACC,KAAK,CAACC,IAAI,CAACX,KAAK,CAACC,IAAI,CAAC,CAAC;EAC9CW,QAAQ,EAAEZ,KAAK,IAAIA,KAAK,CAACI,KAAK;EAC9BE,UAAU,EAAEN,KAAK,IAAIA,KAAK,CAACM;AAC7B,CAAC;AAED,MAAMO,OAAO,GAAG;EACd,MAAMC,UAAUA,CAAC;IAAEC,MAAM;IAAEf;EAAM,CAAC,EAAEgB,OAAO,EAAE;IAE3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,aAAa,EAAEF,OAAO,CAAC,CAChDG,IAAI,CAAEC,GAAG,IAAK;QACX,OAAOA,GAAG,CAACC,IAAI;MACnB,CAAC,CAAC;MACV,IAAIJ,QAAQ,EAAE;QACZf,YAAY,CAACoB,OAAO,CAAC,WAAW,EAAEL,QAAQ,EAAEI,IAAI,EAAEE,aAAa,EAAEnB,KAAK,CAAC;QACvEF,YAAY,CAACoB,OAAO,CAAC,YAAY,EAAEE,IAAI,CAACf,IAAI,CAACgB,SAAS,CAACR,QAAQ,EAAEI,IAAI,EAAEpB,IAAI,CAAC,CAAC,CAAC;QAC9EC,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEL,QAAQ,EAAEI,IAAI,EAAEpB,IAAI,EAAEI,IAAI,CAAC;;QAE5D;;QAEAU,MAAM,CAAC,SAAS,EAAES,IAAI,CAACf,IAAI,CAACgB,SAAS,CAACR,QAAQ,EAAEI,IAAI,EAAEpB,IAAI,CAAC,CAAC,CAAC;QAC7Dc,MAAM,CAAC,UAAU,EAAEE,QAAQ,EAAEI,IAAI,CAACE,aAAa,EAAEnB,KAAK,CAAC;QACvDW,MAAM,CAAC,SAAS,EAAEE,QAAQ,EAAEI,IAAI,CAACpB,IAAI,EAAEI,IAAI,CAAC;QAC5CU,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;;QAE3B;;QAEA;QACA;;QAEAhB,MAAM,CAAC2B,IAAI,CAAE,GAAE1B,KAAK,CAACK,IAAK,YAAW,CAAC;MAExC;MACA,OAAOY,QAAQ;MACf;IAEF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd;IAAA;EAGJ,CAAC;EAEDC,MAAMA,CAAC;IAAEb;EAAO,CAAC,EAAE;IACjBb,YAAY,CAAC2B,UAAU,CAAC,WAAW,CAAC;IACpC3B,YAAY,CAAC2B,UAAU,CAAC,YAAY,CAAC;IACrC3B,YAAY,CAAC2B,UAAU,CAAC,UAAU,CAAC;IACnCd,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;IACvBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;IACxBA,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAC5Be,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,GAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,YAAa,EAAC;EAC1D;AACF,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,OAAOA,CAACtC,KAAK,EAAEC,IAAI,EAAE;IACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDsC,QAAQA,CAACvC,KAAK,EAAEI,KAAK,EAAE;IACrBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDoC,OAAOA,CAACxC,KAAK,EAAEK,IAAI,EAAE;IACnBL,KAAK,CAACK,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDoC,WAAWA,CAACzC,KAAK,EAAE0C,MAAM,EAAE;IACzB1C,KAAK,CAACM,UAAU,GAAGoC,MAAM;EAC3B;AACF,CAAC;AAED,eAAe;EACb1C,KAAK;EACLO,OAAO;EACPM,OAAO;EACPwB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}